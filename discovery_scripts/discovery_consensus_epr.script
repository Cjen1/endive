#!/bin/bash
#SBATCH --partition short    # Partition name
#SBATCH --time=12:00:00       # Time limit.
#SBATCH --constraint="[broadwell|cascadelake]"       # Newer processors.
#SBATCH -N 1                   # Number of nodes
#SBATCH -n 1                   # Number of tasks
#SBATCH --cpus-per-task 28                  # Number of cores

specname="consensus_epr"

source bm_setup.sh $specname

# tlc_workers=24
# num_cti_workers=4
# cti_elimination_workers=8

# nrounds=45
# ninvs=40000
# max_num_ctis_per_round=5000
# target_sample_states=200000
# num_simulate_traces=200000

common_flags=" --tlc_workers $tlc_workers --override_num_cti_workers $num_cti_workers --cti_elimination_workers=$cti_elimination_workers"
common_flags+=" --debug --target_sample_time_limit_ms 10000 --num_simulate_traces $num_simulate_traces --target_sample_states $target_sample_states"
common_flags+=" --opt_quant_minimize --k_cti_induction_depth 1"
common_flags+=" --ninvs $ninvs --max_num_ctis_per_round $max_num_ctis_per_round"
common_flags+=" --save_dot --max_num_conjuncts_per_round 16 --niters 4 --nrounds $nrounds"

for seed in 1 2
do

# All optimizations.
srun -o /scratch/schultz.w/endive_logs/${specname}/${specname}_output_%j_${seed}.txt \
    python3 endive.py --spec benchmarks/$specname \
    $common_flags --seed $seed --proof_tree_mode --auto_lemma_action_decomposition --enable_partitioned_state_caching

# # No state slicing.
# srun -o /home/schultz.w/endive_logs/${specname}_baseline/${specname}_nostateslice_output_%j_${seed}.txt \
#     python3 endive.py --spec benchmarks/$specname \
#     $common_flags --proof_tree_mode --auto_lemma_action_decomposition --disable_state_cache_slicing

# # No grammar slicing.
# srun -o /home/schultz.w/endive_logs/${specname}_baseline/${specname}_nogrammarslice_output_%j_${seed}.txt \
#     python3 endive.py --spec benchmarks/$specname \
#     $common_flags --proof_tree_mode --auto_lemma_action_decomposition --disable_grammar_slicing

done

# Run one baseline.
srun -o /scratch/schultz.w/endive_logs/${specname}_baseline/${specname}_baseline_output_%j_${seed}.txt \
    python3 endive.py --spec benchmarks/$specname \
    $common_flags --seed 1